services:
  kc-postgres:
    image: postgres:17
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KC_POSTGRES_PASSWORD}
    networks:
      - keycloak_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 3

  keycloak:
    image: keycloak/keycloak:26.1
    command:
      - start
      - --proxy-headers=xforwarded
    environment:
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kc-postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KC_POSTGRES_PASSWORD}
    volumes:
      - ./keycloak_themes:/opt/keycloak/themes:ro # Mount custom llamara theme
    ports:
      - 8081:8080
    restart: unless-stopped
    networks:
      - keycloak_network
    depends_on:
      kc-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"]
      interval: 15s
      timeout: 2s
      retries: 15

networks:
  keycloak_network:
    driver: bridge
